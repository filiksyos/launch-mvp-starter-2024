[{"text": "\"use client\";\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { supabase } from '@/utils/supabase/client';\nimport { useAuth } from '@/contexts/AuthContext';\n\nexport default function LoginPage() {\n  const router = useRouter();\n  const { user } = useAuth();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Redirect if already logged in\n  if (user) {\n    router.push('/dashboard');\n    return null;\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n\n    try {\n      if (isSignUp) {\n        const { error } = await supabase.auth.signUp({\n          email,\n          password,\n        });\n        if (error) throw error;\n        alert('Check your email for verification link!');\n      } else {\n        const { error } = await supabase.auth.signInWithPassword({\n          email,\n          password,\n        });\n        if (error) throw error;\n        router.push('/dashboard');\n      }\n    } catch (error: any) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-slate-50 dark:bg-[#0B1120] py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <h2 className=\"mt-6 text-center text-3xl font-bold text-slate-900 dark:text-white\">\n            {isSignUp ? 'Create your account' : 'Sign in to your account'}\n          </h2>\n        </div>\n        \n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          <div className=\"rounded-xl shadow-sm bg-white dark:bg-neutral-dark p-8 border border-slate-200 dark:border-slate-700\">\n            {error && (\n              <div className=\"mb-4 p-3 bg-red-100 dark:bg-red-900/20 border border-red-400 dark:border-red-800 text-red-700 dark:text-red-400 rounded-lg\">\n                {error}\n              </div>\n            )}\n            \n            <div className=\"space-y-4\">\n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2\">\n                  Email address\n                </label>\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  required\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  className=\"appearance-none relative block w-full px-3 py-2 border border-slate-300 dark:border-slate-600 placeholder-slate-400 dark:placeholder-slate-500 text-slate-900 dark:text-white bg-white dark:bg-neutral-darker rounded-lg focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm\"\n                  placeholder=\"Email address\"\n                />\n              </div>\n              \n              <div>\n                <label htmlFor=\"password\" className=\"block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2\">\n                  Password\n                </label>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  required\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  className=\"appearance-none relative block w-full px-3 py-2 border border-slate-300 dark:border-slate-600 placeholder-slate-400 dark:placeholder-slate-500 text-slate-900 dark:text-white bg-white dark:bg-neutral-darker rounded-lg focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm\"\n                  placeholder=\"Password\"\n                />\n              </div>\n            </div>\n\n            <div className=\"mt-6\">\n              <button\n                type=\"submit\"\n                disabled={loading}\n                className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-lg text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n              >\n                {loading ? 'Loading...' : (isSignUp ? 'Sign up' : 'Sign in')}\n              </button>\n            </div>\n          </div>\n\n          <div className=\"text-center\">\n            <button\n              type=\"button\"\n              onClick={() => setIsSignUp(!isSignUp)}\n              className=\"text-sm text-primary hover:text-primary-dark\"\n            >\n              {isSignUp\n                ? 'Already have an account? Sign in'\n                : \"Don't have an account? Sign up\"}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n", "type": "text"}]